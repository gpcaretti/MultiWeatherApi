<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MultiWeatherApi</name>
    </assembly>
    <members>
        <member name="P:MultiWeatherApi.DarkSkyWrapper.ApiKey">
            <summary>Set the api key for the underneath weather service</summary>
        </member>
        <member name="M:MultiWeatherApi.DarkSkyWrapper.#ctor">
            <summary>
                Default constructor. Require to soon set the <see cref="P:MultiWeatherApi.DarkSkyWrapper.ApiKey"/>.
            </summary>
        </member>
        <member name="M:MultiWeatherApi.DarkSkyWrapper.#ctor(System.String)">
            <summary>
                Constructor allowing to set the <see cref="P:MultiWeatherApi.DarkSkyWrapper.ApiKey"/> for the underneath weather service
            </summary>
            <param name="apiKey">the API key for the underneath weather service</param>
        </member>
        <member name="T:MultiWeatherApi.DarkSky.DarkSkyService">
            <summary>
                The Dark Sky service. Returns weather data for given locations, and provides API usage information.
            </summary>
        </member>
        <member name="F:MultiWeatherApi.DarkSky.DarkSkyService.CurrentConditionsUrl">
            <summary>
                The API endpoint to retrieve current weather conditions.
            {0} - API key.
            {1} - Latitude.
            {2} - Longitude.
            {3} - Units.
            {4} - Extends hourly data to include the next 7 days (if "hourly" is given).
            {5} - Any blocks to be excluded from the results.
            {6} - The language to be used in text summaries.
            </summary>
        </member>
        <member name="F:MultiWeatherApi.DarkSky.DarkSkyService.SpecificTimeConditionsUrl">
            <summary>
                The API endpoint to retrieve weather conditions at a particular date and time.
            {0} - API key.
            {1} - Latitude.
            {2} - Longitude.
            {3} - Time to retrieve, either Unix time or [YYYY]-[MM]-[DD]T[HH]:[MM]:[SS].
            {4} - Units.
            {5} - Extends hourly data to include the next 7 days (if "hourly" is given).
            {6} - Any blocks to be excluded from the results.
            {7} - The language to be used in text summaries. 
            </summary>
        </member>
        <member name="M:MultiWeatherApi.DarkSky.DarkSkyService.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:MultiWeatherApi.DarkSky.DarkSkyService"/> class.
            </summary>
            <param name="key">The API key to use.</param>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.DarkSkyService.ApiCallsMade">
            <summary>
                Gets the number of API calls made today using the given API key.
                <para>This property will be null until a request has been made.</para>
            </summary>
        </member>
        <member name="M:MultiWeatherApi.DarkSky.DarkSkyService.GetCurrentWeather(System.Double,System.Double,MultiWeatherApi.DarkSky.Model.DSUnit,MultiWeatherApi.Model.Language)">
            <summary>
               Returns the current weather conditions, included an hour-by-hour forecast for the next 48 hours and possible alerts
            </summary>
            <param name="latitude">The latitude to retrieve data for.</param>
            <param name="longitude">The longitude to retrieve data for.</param>
            <param name="unit">Default is <see cref="F:MultiWeatherApi.DarkSky.Model.DSUnit.Auto"/></param>
            <param name="language">Default is <see cref="F:MultiWeatherApi.Model.Language.English"/></param>
            <returns>A <see cref="T:MultiWeatherApi.DarkSky.Model.Forecast"/> with the requested data, or null if the data was corrupted.</returns>
            <exception cref="T:System.Net.Http.HttpRequestException">Thrown when the service returned anything other than a 200 (Status OK) code.</exception>
        </member>
        <member name="M:MultiWeatherApi.DarkSky.DarkSkyService.GetForecast(System.Double,System.Double,MultiWeatherApi.DarkSky.Model.DSUnit,MultiWeatherApi.Model.Language)">
            <summary>
               Returns the current weather conditions, included an hour-by-hour forecast for the next 48 hours, the daily forecast for the next 7 days and possible alerts
            </summary>
            <param name="latitude">The latitude to retrieve data for.</param>
            <param name="longitude">The longitude to retrieve data for.</param>
            <param name="unit">Default is <see cref="F:MultiWeatherApi.DarkSky.Model.DSUnit.Auto"/></param>
            <param name="language">Default is <see cref="F:MultiWeatherApi.Model.Language.English"/></param>
            <returns>A <see cref="T:MultiWeatherApi.DarkSky.Model.Forecast"/> with the requested data, or null if the data was corrupted.</returns>
            <exception cref="T:System.Net.Http.HttpRequestException">Thrown when the service returned anything other than a 200 (Status OK) code.</exception>
        </member>
        <member name="M:MultiWeatherApi.DarkSky.DarkSkyService.GetWeather(System.Double,System.Double,System.Collections.Generic.IList{MultiWeatherApi.DarkSky.Model.Extend},System.Collections.Generic.IList{MultiWeatherApi.Model.Exclude},MultiWeatherApi.DarkSky.Model.DSUnit,MultiWeatherApi.Model.Language)">
            <summary>
               The most general method to retrieve weather data and forecast for a particular latitude and longitude (full optional).
            </summary>
            <param name="latitude">The latitude to retrieve data for.</param>
            <param name="longitude">The longitude to retrieve data for.</param>
            <param name="excludes">Any blocks that should be excluded from the request.</param>
            <param name="extends">The type of forecast to retrieve extended results for. Currently limited to hourly blocks.</param>
            <param name="unit">Default is <see cref="F:MultiWeatherApi.DarkSky.Model.DSUnit.Auto"/></param>
            <param name="language">Default is <see cref="F:MultiWeatherApi.Model.Language.English"/></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> for a <see cref="T:MultiWeatherApi.DarkSky.Model.Forecast"/> with the requested data, or null if the data was corrupted.</returns>
            <exception cref="T:System.Net.Http.HttpRequestException">Thrown when the service returned anything other than a 200 (Status OK) code.</exception>
        </member>
        <member name="M:MultiWeatherApi.DarkSky.DarkSkyService.GetWeatherByDate(System.Double,System.Double,System.DateTimeOffset,MultiWeatherApi.DarkSky.Model.DSUnit,MultiWeatherApi.Model.Language)">
            <summary>
                Retrieve the observed (in the past) or forecasted (in the future) hour-by-hour weather and daily weather 
                conditions for a particular date. A Time Machine request is identical in structure to a Forecast Request, except:
                * The 'currently' data point will refer to the time provided, rather than the current time.
                * The 'minutely' data block will be omitted, unless you are requesting a time within an hour of the present.
                * The 'hourly data block will contain data points starting at midnight (local time) of the day requested, and continuing 
                  until midnight (local time) of the following day.
                * The 'daily' data block will contain a single data point referring to the requested date.
                * The 'alerts' data block will be omitted.
            </summary>
            <param name="latitude">The latitude to retrieve data for.</param>
            <param name="longitude">The longitude to retrieve data for.</param>
            <param name="date">Requested date</param>
            <param name="unit">Default <see cref="F:MultiWeatherApi.DarkSky.Model.DSUnit.Auto"/></param>
            <param name="language">Default <see cref="F:MultiWeatherApi.Model.Language.English"/></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> for a <see cref="T:MultiWeatherApi.DarkSky.Model.Forecast"/> with the requested data, or null if the data was corrupted.</returns>
            <exception cref="T:System.Net.Http.HttpRequestException">Thrown when the service returned anything other than a 200 (Status OK) code.</exception>
        </member>
        <member name="M:MultiWeatherApi.DarkSky.DarkSkyService.GetWeatherByDate(System.Double,System.Double,System.DateTime,System.Collections.Generic.IList{MultiWeatherApi.Model.Exclude},MultiWeatherApi.DarkSky.Model.DSUnit,MultiWeatherApi.Model.Language)">
            <summary>
                Retrieve the observed (in the past) or forecasted (in the future) hour-by-hour weather and daily weather 
                conditions for a particular date. A Time Machine request is identical in structure to a Forecast Request, except:
                * The 'currently' data point will refer to the time provided, rather than the current time.
                * The 'minutely' data block will be omitted, unless you are requesting a time within an hour of the present.
                * The 'hourly data block will contain data points starting at midnight (local time) of the day requested, and continuing 
                  until midnight (local time) of the following day.
                * The 'daily' data block will contain a single data point referring to the requested date.
                * The 'alerts' data block will be omitted.
            </summary>
            <param name="latitude">The latitude to retrieve data for.</param>
            <param name="longitude">The longitude to retrieve data for.</param>
            <param name="date">Requested date</param>
            <param name="excludes">Any blocks that should be excluded from the request.</param>
            <param name="unit">Default <see cref="F:MultiWeatherApi.DarkSky.Model.DSUnit.Auto"/></param>
            <param name="language">Default <see cref="F:MultiWeatherApi.Model.Language.English"/></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> for a <see cref="T:MultiWeatherApi.DarkSky.Model.Forecast"/> with the requested data, or null if the data was corrupted.</returns>
        </member>
        <member name="M:MultiWeatherApi.DarkSky.DarkSkyService.GetWeatherByDate(System.Double,System.Double,System.DateTimeOffset,System.Collections.Generic.IList{MultiWeatherApi.DarkSky.Model.Extend},System.Collections.Generic.IList{MultiWeatherApi.Model.Exclude},MultiWeatherApi.DarkSky.Model.DSUnit,MultiWeatherApi.Model.Language)">
            <summary>
                The most general method to retrieve the observed (in the past) or forecasted (in the future) hour-by-hour weather and daily weather 
                conditions for a particular date. A Time Machine request is identical in structure to a Forecast Request, except:
                * The 'currently' data point will refer to the time provided, rather than the current time.
                * The 'minutely' data block will be omitted, unless you are requesting a time within an hour of the present.
                * The 'hourly data block will contain data points starting at midnight (local time) of the day requested, and continuing 
                  until midnight (local time) of the following day.
                * The 'daily' data block will contain a single data point referring to the requested date.
                * The 'alerts' data block will be omitted.
            </summary>
            <param name="latitude">The latitude to retrieve data for.</param>
            <param name="longitude">The longitude to retrieve data for.</param>
            <param name="date">Requested date</param>
            <param name="excludes">Any blocks that should be excluded from the request.</param>
            <param name="extends">The type of forecast to retrieve extended results for. Currently limited to hourly blocks.</param>
            <param name="unit">Default <see cref="F:MultiWeatherApi.DarkSky.Model.DSUnit.Auto"/></param>
            <param name="language">Default <see cref="F:MultiWeatherApi.Model.Language.English"/></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> for a <see cref="T:MultiWeatherApi.DarkSky.Model.Forecast"/> with the requested data, or null if the data was corrupted.</returns>
            <exception cref="T:System.Net.Http.HttpRequestException">Thrown when the service returned anything other than a 200 (Status OK) code.</exception>
        </member>
        <member name="M:MultiWeatherApi.DarkSky.DarkSkyService.GetForecastFromUrlAsync(System.String)">
            <summary>
                Given a formatted URL containing the parameters for a forecast request, retrieves, parses, and returns weather data from it.
            </summary>
            <param name="requestUrl">The full URL from which the request should be made, including the API key and other parameters.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> for a <see cref="T:MultiWeatherApi.DarkSky.Model.Forecast"/> containing weather data.</returns>
            <exception cref="T:MultiWeatherApi.WeatherException">Thrown if the response did not have a status code indicating success.</exception>
        </member>
        <member name="M:MultiWeatherApi.DarkSky.DarkSkyService.UpdateApiCallsMade(System.Net.Http.HttpResponseMessage)">
            <summary>
                Updates the number of API calls made using the value provided in the response to a weather data request.
            </summary>
            <param name="response">Response received after successfully requesting weather data.</param>
        </member>
        <member name="T:MultiWeatherApi.DarkSky.IDarkSkyService">
            <summary>
                The interface for the Dark Sky service. 
            </summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.IDarkSkyService.ApiCallsMade">
            <summary>
                Gets the number of API calls made today using the given API key.
                <para>This property will be null until a request has been made.</para>
            </summary>
        </member>
        <member name="M:MultiWeatherApi.DarkSky.IDarkSkyService.GetCurrentWeather(System.Double,System.Double,MultiWeatherApi.DarkSky.Model.DSUnit,MultiWeatherApi.Model.Language)">
            <summary>
               Returns the current weather conditions, included an hour-by-hour forecast for the next 48 hours and possible alerts
            </summary>
            <param name="latitude">The latitude to retrieve data for.</param>
            <param name="longitude">The longitude to retrieve data for.</param>
            <param name="unit">Default is <see cref="F:MultiWeatherApi.DarkSky.Model.DSUnit.Auto"/></param>
            <param name="language">Default is <see cref="F:MultiWeatherApi.Model.Language.English"/></param>
            <returns>A <see cref="T:MultiWeatherApi.DarkSky.Model.Forecast"/> with the requested data, or null if the data was corrupted.</returns>
            <exception cref="T:MultiWeatherApi.WeatherException">Thrown if the response did not have a status code indicating success.</exception>
        </member>
        <member name="M:MultiWeatherApi.DarkSky.IDarkSkyService.GetForecast(System.Double,System.Double,MultiWeatherApi.DarkSky.Model.DSUnit,MultiWeatherApi.Model.Language)">
            <summary>
               Returns the current weather conditions, included
                * an hour-by-hour forecast for the next 48 hours, 
                * the daily forecast for the next 7 days and 
                * possible alerts
            </summary>
            <param name="latitude">The latitude to retrieve data for.</param>
            <param name="longitude">The longitude to retrieve data for.</param>
            <param name="unit">Default is <see cref="F:MultiWeatherApi.DarkSky.Model.DSUnit.Auto"/></param>
            <param name="language">Default is <see cref="F:MultiWeatherApi.Model.Language.English"/></param>
            <returns>A <see cref="T:MultiWeatherApi.DarkSky.Model.Forecast"/> with the requested data, or null if the data was corrupted.</returns>
            <exception cref="T:MultiWeatherApi.WeatherException">Thrown if the response did not have a status code indicating success.</exception>
        </member>
        <member name="M:MultiWeatherApi.DarkSky.IDarkSkyService.GetWeather(System.Double,System.Double,System.Collections.Generic.IList{MultiWeatherApi.DarkSky.Model.Extend},System.Collections.Generic.IList{MultiWeatherApi.Model.Exclude},MultiWeatherApi.DarkSky.Model.DSUnit,MultiWeatherApi.Model.Language)">
            <summary>
               The most general method to retrieves weather data and forecast for a particular latitude and longitude (full optional).
            </summary>
            <param name="latitude">The latitude to retrieve data for.</param>
            <param name="longitude">The longitude to retrieve data for.</param>
            <param name="excludes">Any blocks that should be excluded from the request.</param>
            <param name="extends">The type of forecast to retrieve extended results for. Currently limited to hourly blocks.</param>
            <param name="unit">Default is <see cref="F:MultiWeatherApi.DarkSky.Model.DSUnit.Auto"/></param>
            <param name="language">Default is <see cref="F:MultiWeatherApi.Model.Language.English"/></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> for a <see cref="T:MultiWeatherApi.DarkSky.Model.Forecast"/> with the requested data, or null if the data was corrupted.</returns>
            <exception cref="T:MultiWeatherApi.WeatherException">Thrown if the response did not have a status code indicating success.</exception>
        </member>
        <member name="M:MultiWeatherApi.DarkSky.IDarkSkyService.GetWeatherByDate(System.Double,System.Double,System.DateTimeOffset,MultiWeatherApi.DarkSky.Model.DSUnit,MultiWeatherApi.Model.Language)">
            <summary>
                Retrieve the observed (in the past) or forecasted (in the future) hour-by-hour weather and daily weather 
                conditions for a particular date. A Time Machine request is identical in structure to a Forecast Request, except:
                * The 'currently' data point will refer to the time provided, rather than the current time.
                * The 'minutely' data block will be omitted, unless you are requesting a time within an hour of the present.
                * The 'hourly data block will contain data points starting at midnight (local time) of the day requested, and continuing 
                  until midnight (local time) of the following day.
                * The 'daily' data block will contain a single data point referring to the requested date.
                * The 'alerts' data block will be omitted.
            </summary>
            <param name="latitude">The latitude to retrieve data for.</param>
            <param name="longitude">The longitude to retrieve data for.</param>
            <param name="date">Requested date</param>
            <param name="unit">Default <see cref="F:MultiWeatherApi.DarkSky.Model.DSUnit.Auto"/></param>
            <param name="language">Default <see cref="F:MultiWeatherApi.Model.Language.English"/></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> for a <see cref="T:MultiWeatherApi.DarkSky.Model.Forecast"/> with the requested data, or null if the data was corrupted.</returns>
            <exception cref="T:MultiWeatherApi.WeatherException">Thrown if the response did not have a status code indicating success.</exception>
        </member>
        <member name="M:MultiWeatherApi.DarkSky.IDarkSkyService.GetWeatherByDate(System.Double,System.Double,System.DateTime,System.Collections.Generic.IList{MultiWeatherApi.Model.Exclude},MultiWeatherApi.DarkSky.Model.DSUnit,MultiWeatherApi.Model.Language)">
            <summary>
                Retrieve the observed (in the past) or forecasted (in the future) hour-by-hour weather and daily weather 
                conditions for a particular date. A Time Machine request is identical in structure to a Forecast Request, except:
                * The 'currently' data point will refer to the time provided, rather than the current time.
                * The 'minutely' data block will be omitted, unless you are requesting a time within an hour of the present.
                * The 'hourly data block will contain data points starting at midnight (local time) of the day requested, and continuing 
                  until midnight (local time) of the following day.
                * The 'daily' data block will contain a single data point referring to the requested date.
                * The 'alerts' data block will be omitted.
            </summary>
            <param name="latitude">The latitude to retrieve data for.</param>
            <param name="longitude">The longitude to retrieve data for.</param>
            <param name="date">Requested date</param>
            <param name="excludes">Any blocks that should be excluded from the request.</param>
            <param name="unit">Default <see cref="F:MultiWeatherApi.DarkSky.Model.DSUnit.Auto"/></param>
            <param name="language">Default <see cref="F:MultiWeatherApi.Model.Language.English"/></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> for a <see cref="T:MultiWeatherApi.DarkSky.Model.Forecast"/> with the requested data, or null if the data was corrupted.</returns>
            <exception cref="T:MultiWeatherApi.WeatherException">Thrown if the response did not have a status code indicating success.</exception>
        </member>
        <member name="M:MultiWeatherApi.DarkSky.IDarkSkyService.GetWeatherByDate(System.Double,System.Double,System.DateTimeOffset,System.Collections.Generic.IList{MultiWeatherApi.DarkSky.Model.Extend},System.Collections.Generic.IList{MultiWeatherApi.Model.Exclude},MultiWeatherApi.DarkSky.Model.DSUnit,MultiWeatherApi.Model.Language)">
            <summary>
                The most general method to retrieve the observed (in the past) or forecasted (in the future) hour-by-hour weather and daily weather 
                conditions for a particular date. A Time Machine request is identical in structure to a Forecast Request, except:
                * The 'currently' data point will refer to the time provided, rather than the current time.
                * The 'minutely' data block will be omitted, unless you are requesting a time within an hour of the present.
                * The 'hourly data block will contain data points starting at midnight (local time) of the day requested, and continuing 
                  until midnight (local time) of the following day.
                * The 'daily' data block will contain a single data point referring to the requested date.
                * The 'alerts' data block will be omitted.
            </summary>
            <param name="latitude">The latitude to retrieve data for.</param>
            <param name="longitude">The longitude to retrieve data for.</param>
            <param name="date">Requested date</param>
            <param name="excludes">Any blocks that should be excluded from the request.</param>
            <param name="extends">The type of forecast to retrieve extended results for. Currently limited to hourly blocks.</param>
            <param name="unit">Default <see cref="F:MultiWeatherApi.DarkSky.Model.DSUnit.Auto"/></param>
            <param name="language">Default <see cref="F:MultiWeatherApi.Model.Language.English"/></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> for a <see cref="T:MultiWeatherApi.DarkSky.Model.Forecast"/> with the requested data, or null if the data was corrupted.</returns>
            <exception cref="T:MultiWeatherApi.WeatherException">Thrown if the response did not have a status code indicating success.</exception>
        </member>
        <member name="T:MultiWeatherApi.DarkSky.Model.DataPoint">
            <summary>
                The weather conditions at a particular location and time frame.
            </summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.DataPoint.Summary">
            <summary>A human-readable summary of this data point.</summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.DataPoint.Icon">
            <summary>Icon code</summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.DataPoint.Visibility">
            <summary>the average visibility (km/miles). Optional</summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.DataPoint.Wind">
            <summary>the wind features</summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.DataPoint.Temperature">
            <summary>Various real temperatures of this time frame</summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.DataPoint.ApparentTemperature">
            <summary>Various apparent temperatures of this time frame</summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.DataPoint.UnixTime">
            <summary>
                The UNIX time at which this data point begins. 
                * A 'minutely' data point is always aligned to the top of the minute, 
                * A 'hourly' data point objects is always aligned to the top of the hour, 
                * A 'daily' data point objects is always aligned to midnight of the day, 
                * A 'currently' data point object is always aligned to the point of time provided.
                All according to the local time zone of the word .    
            Time of this data point (unix, UTC). See also <see cref="P:MultiWeatherApi.DarkSky.Model.DataPoint.Time"/>
            </summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.DataPoint.SunriseUnixTime">
            <summary>Sunrise time (unix, UTC). See also <see cref="P:MultiWeatherApi.DarkSky.Model.DataPoint.SunriseTime"/></summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.DataPoint.SunsetUnixTime">
            <summary>Sunset time (unix, UTC). See also <see cref="P:MultiWeatherApi.DarkSky.Model.DataPoint.SunsetTime"/></summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.DataPoint.Time">
            <summary>Time of this data point (UTC). See also <see cref="P:MultiWeatherApi.DarkSky.Model.DataPoint.UnixTime"/></summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.DataPoint.SunriseTime">
            <summary>Sunrise time (UTC). See also <see cref="P:MultiWeatherApi.DarkSky.Model.DataPoint.SunsetUnixTime"/></summary>
            <remarks>Null for hourly details</remarks>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.DataPoint.SunsetTime">
            <summary>Sunset time (UTC). See also <see cref="P:MultiWeatherApi.DarkSky.Model.DataPoint.SunsetUnixTime"/></summary>
            <remarks>Null for hourly details</remarks>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.DataPoint.UVIndex">
            <summary>UV index (optional)</summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.DataPoint.UVIndexTime">
            <summary>UV index time (optional). Available only on daily</summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.DataPoint.Cloudness">
            <summary>the percentage of cloud cover (from 0 to 100).</summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.DataPoint.Ozone">
            <summary>the columnar density of total atmospheric ozone, in Dobson units.</summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.DataPoint.PrecipitationIntensity">
            <summary>
                the average expected precipitation assuming any precipitation occurs.
            </summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.DataPoint.PrecipitationProbability">
            <summary>
                the probability of precipitation (from 0 to 1).
            </summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.DataPoint.PrecipitationType">
            <summary>
                the type of precipitation (rain, sleet, or snow).
            </summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.DataPoint.WindGustTime">
            <summary>Time of wind gust (unix, UTC)</summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.DataPoint.CloudCover">
            <summary>the percentage of cloud cover (from 0 to 1).</summary>
        </member>
        <member name="T:MultiWeatherApi.DarkSky.Model.Flags">
            <summary>
            Metadata associated with a forecast.
            </summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.Flags.Sources">
            <summary>
                the IDs for each data source used to provide info for this forecast.
            </summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.Flags.DarkSkyStations">
            <summary>
                the IDs for each radar station used to provide info for this forecast.
            </summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.Flags.DataPointStations">
            <summary>
                the IDs for each DataPoint station used to provide info for this forecast.
            </summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.Flags.IsdStations">
            <summary>
                the IDs for each ISD station used to provide info for this forecast.
            </summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.Flags.LampStations">
            <summary>
                the IDs for each LAMP station used to provide info for this forecast.
            </summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.Flags.MetarStations">
            <summary>
                the IDs for each METAR station used to provide info for this forecast.
            </summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.Flags.MadisStations">
            <summary>
                the IDs for each MADIS station used to provide info for this forecast.
            </summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.Flags.MetnoLicense">
            <summary>
                the met.no license. If this is present, data from api.met.no was used to provide info for this forecast.
            </summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.Flags.Units">
            <summary>
                the type of units that are used for the data in this forecast.
            </summary>
        </member>
        <member name="T:MultiWeatherApi.DarkSky.Model.Forecast">
            <summary>
                A forecast for a particular location.
            </summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.Forecast.Coordinates">
            <summary>the geo coordinates of this forecast</summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.Forecast.TimeZone">
            <summary>the IANA time zone name for this location</summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.Forecast.TimeZoneOffset">
            <summary>the time zone offset, in hours from GMT.</summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.Forecast.Currently">
            <summary>the current conditions at the requested location.</summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.Forecast.Minutely">
            <summary>the minute-by-minute conditions for the next hour.</summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.Forecast.Hourly">
            <summary>the hour-by-hour conditions for the next two days.</summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.Forecast.Daily">
            <summary>the daily conditions for the next week.</summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.Forecast.Flags">
            <summary>the metadata (flags) associated with this forecast.</summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.Forecast.Alerts">
            <summary>Any weather alerts related to this location.</summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.Forecast.Latitude">
            <summary>the latitude of this forecast.</summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.Forecast.Longitude">
            <summary>the longitude of this forecast.</summary>
        </member>
        <member name="T:MultiWeatherApi.DarkSky.Model.ForecastDetails">
            <summary>
                Forecast details
            </summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.ForecastDetails.Summary">
            <summary>
                a human-readable summary of the forecast.
            </summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.ForecastDetails.Icon">
            <summary>
                machine-readable text that can be used to select an icon to display.
            </summary>
        </member>
        <member name="P:MultiWeatherApi.DarkSky.Model.ForecastDetails.Data">
            <summary>
                the individual data points that make up this forecast.
            </summary>
        </member>
        <member name="T:MultiWeatherApi.DarkSky.Model.DSUnit">
            <summary>
                Units of measurement supported by the Forecast service.
            </summary>
        </member>
        <member name="F:MultiWeatherApi.DarkSky.Model.DSUnit.US">
            <summary>
                Imperial US units of measurement.
            <para>
                Summaries containing temperature or snow accumulation units have
                their values in degrees Fahrenheit or inches (respectively).
                Nearest storm distance: Miles
                Precipitation intensity: Inches/hour
                Precipitation accumulation: Inches
                Temperature: Fahrenheit
                Dew Point: Fahrenheit
                Wind Speed: Miles/hour
                Pressure: Millibars
                Visibility: Miles
            </para>
            </summary>
        </member>
        <member name="F:MultiWeatherApi.DarkSky.Model.DSUnit.SI">
            <summary>
                SI units of measurement.
            <para>
                Summaries containing temperature or snow accumulation units have
                their values in degrees Celsius or centimeters (respectively).
                Nearest storm distance: km
                Precipitation intensity: mm/hour
                Precipitation accumulation: cm
                Temperature: Celsius
                Dew Point: Celsius
                Wind Speed: m/s
                Pressure: Hectopascals (equivalent to millibars)
                Visibility: km
            </para>
            </summary>
        </member>
        <member name="F:MultiWeatherApi.DarkSky.Model.DSUnit.CA">
            <summary>
            Canadian units of measurement. The same as SI, but with 
            kilometers per hour used for Wind Speed.
            <para>
            Summaries containing temperature or snow accumulation units have
            their values in degrees Celsius or centimeters (respectively).
            Nearest storm distance: Kilometers
            Precipitation intensity: Millimeters per hour
            Precipitation accumulation: Centimeters
            Temperature: Celsius
            Dew Point: Celsius
            Wind Speed: Kilometers per hour
            Pressure: Hectopascals (equivalent to millibars)
            Visibility: Kilometers
            </para>
            </summary>
        </member>
        <member name="F:MultiWeatherApi.DarkSky.Model.DSUnit.UK">
            <summary>
            UK units of measurement. The same as SI, but with miles per
            hour used for Wind Speed.
            <para>
            Summaries containing temperature or snow accumulation units have
            their values in degrees Celsius or centimeters (respectively).
            Nearest storm distance: Kilometers
            Precipitation intensity: Millimeters per hour
            Precipitation accumulation: Centimeters
            Temperature: Celsius
            Dew Point: Celsius
            Wind Speed: Miles per hour
            Pressure: Hectopascals (equivalent to millibars)
            Visibility: Kilometers
            </para>
            </summary>
        </member>
        <member name="F:MultiWeatherApi.DarkSky.Model.DSUnit.UK2">
            <summary>
            UK units of measurement. The same as SI, except that 
            nearestStormDistance and visibility are in miles and windSpeed 
            is in miles per hour
            <para>
            Summaries containing temperature or snow accumulation units have
            their values in degrees Celsius or centimeters (respectively).
            Nearest storm distance: Miles
            Precipitation intensity: Millimeters per hour
            Precipitation accumulation: Centimeters
            Temperature: Celsius
            Dew Point: Celsius
            Wind Speed: Miles per hour
            Pressure: Hectopascals (equivalent to millibars)
            Visibility: Miles
            </para>
            </summary>
        </member>
        <member name="F:MultiWeatherApi.DarkSky.Model.DSUnit.Auto">
            <summary>
                Automatically choose units of measurement based on geographic location.
            </summary>
        </member>
        <member name="T:MultiWeatherApi.DarkSky.Model.Extend">
            <summary>
            Data blocks that can have their ranges extended.
            </summary>
        </member>
        <member name="F:MultiWeatherApi.DarkSky.Model.Extend.Hourly">
            <summary>
            Extends the hourly forecast block to the next seven days from just the next two.
            <para>Ignored when making time machine requests.</para>
            </summary>
        </member>
        <member name="T:MultiWeatherApi.DarkSky.Model.ParameterExtensions">
            <summary>
            Extension methods for the request parameter enumerations.
            </summary>
        </member>
        <member name="M:MultiWeatherApi.DarkSky.Model.ParameterExtensions.ToValue(MultiWeatherApi.DarkSky.Model.DSUnit)">
            <summary>
            Gives the Forecast Service-friendly name for
            this parameter.
            </summary>
            <param name="self">
            The parameter to convert.
            </param>
            <returns>
            The service-friendly <see cref="T:System.String"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when the parameter does not have a corresponding
            friendly name.
            </exception>
        </member>
        <member name="M:MultiWeatherApi.DarkSky.Model.ParameterExtensions.ToValue(MultiWeatherApi.DarkSky.Model.Extend)">
            <summary>
            Gives the Forecast Service-friendly name for
            this parameter.
            </summary>
            <param name="self">
            The parameter to convert.
            </param>
            <returns>
            The service-friendly <see cref="T:System.String"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when the parameter does not have a corresponding
            friendly name.
            </exception>
        </member>
        <member name="T:MultiWeatherApi.DateTimeHelper">
            <summary>
                Helper methods for <see cref="T:MultiWeatherApi.DateTimeHelper"/>
            </summary>
        </member>
        <member name="F:MultiWeatherApi.DateTimeHelper.BaseUnixTime">
            <summary>
                DateTime representing 0 Unix time: January 1, 1970, GMT.
            </summary>
        </member>
        <member name="M:MultiWeatherApi.DateTimeHelper.ToDateTimeOffset(System.Int32)">
            <summary>
                Converts Unix Time (seconds since January 1, 1970 UTC) to a DateTimeOffset object.
            </summary>
            <param name="secondsSince">Seconds since January 1, 1970.</param>
            <returns><see cref="T:System.DateTime"/> representing the given Unix time.</returns>
        </member>
        <member name="M:MultiWeatherApi.DateTimeHelper.ToUnixTime(System.DateTimeOffset)">
            <summary>
                Converts this DateTimeOffset to Unix time (seconds since January 1, 1970 UTC).
            </summary>
            <param name="time"></param>
            <returns>The number of seconds since January 1, 1970 UTC.</returns>
        </member>
        <member name="M:MultiWeatherApi.DateTimeHelper.ToUnixTime(System.DateTime)">
            <summary>
                Converts this DateTime to Unix time (seconds since January 1, 1970 UTC).
            </summary>
            <param name="time"></param>
            <returns>The number of seconds since January 1, 1970 UTC.</returns>
        </member>
        <member name="T:MultiWeatherApi.IWeatherService">
            <summary>
                General interface for the weather service
            </summary>
        </member>
        <member name="M:MultiWeatherApi.IWeatherService.GetCurrentWeather(System.Double,System.Double,MultiWeatherApi.Model.Unit,MultiWeatherApi.Model.Language)">
            <summary>
               Returns the current weather conditions, included an hour-by-hour forecast for the next 48 hours and possible alerts
            </summary>
            <param name="latitude">The latitude to retrieve data for.</param>
            <param name="longitude">The longitude to retrieve data for.</param>
            <param name="unit">Default is <see cref="F:MultiWeatherApi.Model.Unit.Auto"/></param>
            <param name="language">Default is <see cref="F:MultiWeatherApi.Model.Language.English"/></param>
            <returns>A <see cref="T:MultiWeatherApi.Model.Weather"/> with the requested data, or null if the data was corrupted.</returns>
            <exception cref="T:MultiWeatherApi.WeatherException">Thrown if the response did not have a status code indicating success.</exception>
        </member>
        <member name="M:MultiWeatherApi.IWeatherService.GetForecast(System.Double,System.Double,MultiWeatherApi.Model.Unit,MultiWeatherApi.Model.Language)">
            <summary>
               Returns the current weather conditions, included
                * an hour-by-hour forecast for the next 48 hours, 
                * the daily forecast for the next 7 days and 
                * possible alerts
            </summary>
            <param name="latitude">The latitude to retrieve data for.</param>
            <param name="longitude">The longitude to retrieve data for.</param>
            <param name="unit">Default is <see cref="F:MultiWeatherApi.Model.Unit.Auto"/></param>
            <param name="language">Default is <see cref="F:MultiWeatherApi.Model.Language.English"/></param>
            <returns>A <see cref="T:MultiWeatherApi.Model.WeatherGroup"/> with the requested data, or null if the data was corrupted.</returns>
            <exception cref="T:MultiWeatherApi.WeatherException">Thrown if the response did not have a status code indicating success.</exception>
        </member>
        <member name="M:MultiWeatherApi.IWeatherService.GetWeatherByDate(System.Double,System.Double,System.DateTime,MultiWeatherApi.Model.Unit,MultiWeatherApi.Model.Language)">
            <summary>
                Retrieve the observed (in the past) or forecasted (in the future) hour-by-hour weather and daily weather 
                conditions for a particular date. Returned data are identical in structure to the current conditions, except:
                * The 'currently' data point will refer to the time provided, rather than the current time.
                * The 'hourly data block will contain data points starting at midnight (local time) of the day requested, and continuing 
                  until midnight (local time) of the following day.
                * The 'daily' data block will contain a single data point referring to the requested date.
                * The 'alerts' data block will be omitted.
            </summary>
            <param name="latitude">The latitude to retrieve data for.</param>
            <param name="longitude">The longitude to retrieve data for.</param>
            <param name="dateTime"></param>
            <param name="unit">Default is <see cref="F:MultiWeatherApi.Model.Unit.Auto"/></param>
            <param name="language">Default is <see cref="F:MultiWeatherApi.Model.Language.English"/></param>
            <returns></returns>
        </member>
        <member name="T:MultiWeatherApi.Model.Alert">
            <summary>
                 An severe weather alert issued by a weather service for a particular location.
            </summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Alert.StartTime">
            <summary>
                the moment in time at which this alert was issued.
            </summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Alert.ExpiresTime">
            <summary>
                the moment in time at which this alert is no longer valid.
            </summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Alert.Severity">
            <summary>
                Gets the severity of this weather alert.
            </summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Alert.Sender">
            <summary>Possibile null name of the sender</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Alert.Title">
            <summary>
                a short text summary of this alert.
            </summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Alert.Regions">
            <summary>
                the regions covered by this alert.
            </summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Alert.Description">
            <summary>
                the text description of this alert.
            </summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Alert.Uri">
            <summary>
                a URI to the alert's details.
            </summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Alert.StartUnixTime">
            <summary>
                Unix time at which this alert was issued.
            </summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Alert.ExpiresUnixTime">
            <summary>
                Unix time at which this alert is no longer valid.
            </summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Alert.SeverityAsString">
            <summary>
            The severity of this alert, as a string.
            </summary>
        </member>
        <member name="T:MultiWeatherApi.Model.City">
            <summary>
                Information about the city 
            </summary>
        </member>
        <member name="P:MultiWeatherApi.Model.City.Name">
            <summary>City name</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.City.Country">
            <summary>City country</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.City.TimeZone">
            <summary>
                the IANA time zone name for this location.
            </summary>
        </member>
        <member name="P:MultiWeatherApi.Model.City.CountryCode">
            <summary>Country code (GB, JP etc.)</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.City.SunriseTime">
            <summary>Gets or sets the time of this data point (unix, UTC)</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.City.SunsetTime">
            <summary>Gets or sets the time of this data point (unix, UTC)</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.City.Sys">
            <summary>City Additional info</summary>
        </member>
        <member name="T:MultiWeatherApi.Model.CityAdditionalSys">
            <summary>
                Additional info about the city
            </summary>
        </member>
        <member name="P:MultiWeatherApi.Model.CityAdditionalSys.CountryCode">
            <summary>Country code (GB, JP etc.)</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.CityAdditionalSys.SunriseUnixTime">
            <summary>Gets or sets the sunrise time of this data point (unix, UTC)</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.CityAdditionalSys.SunriseTime">
            <summary>Gets or sets the time of this data point (unix, UTC)</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.CityAdditionalSys.SunsetUnixTime">
            <summary>Gets or sets the sunrise time of this data point (unix, UTC)</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.CityAdditionalSys.SunsetTime">
            <summary>Gets or sets the time of this data point (unix, UTC)</summary>
        </member>
        <member name="T:MultiWeatherApi.Model.GeoCoordinates">
            <summary>
                Geographical coordinates
            </summary>
        </member>
        <member name="M:MultiWeatherApi.Model.GeoCoordinates.#ctor">
            <summary>Default contructor</summary>
        </member>
        <member name="M:MultiWeatherApi.Model.GeoCoordinates.#ctor(System.Double,System.Double)">
            <summary>Contructor setting lat and lon</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.GeoCoordinates.Latitude">
            <summary>Latidute</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.GeoCoordinates.Longitude">
            <summary>longitude</summary>
        </member>
        <member name="T:MultiWeatherApi.Model.IWeatherData">
            <summary>
                Just to recognize implementing classes as weather coditions data (useful in generic method: T myMethod<![CDATA[T]]>)
            </summary>
        </member>
        <member name="T:MultiWeatherApi.Model.Temperature">
            <summary>
                Temperatures of the time frame they relate to
            </summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Temperature.Daily">
            <summary>Daily temperature</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Temperature.Morning">
            <summary>Morning temperature</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Temperature.Evening">
            <summary>Evening temperature</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Temperature.Night">
            <summary>Night temperature</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Temperature.Min">
            <summary>Min temperature of the day</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Temperature.Max">
            <summary>Max temperature of the day.</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Temperature.DewPoint">
            <summary>Dew point</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Temperature.Humidity">
            <summary>Humidity (percentage)</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Temperature.Pressure">
            <summary>Pressure at the level sea</summary>
        </member>
        <member name="T:MultiWeatherApi.Model.TemperatureOLD">
            <summary>
                Temperature of the time frame they relate to
            </summary>
        </member>
        <member name="P:MultiWeatherApi.Model.TemperatureOLD.Daily">
            <summary>Daily temperature</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.TemperatureOLD.Morning">
            <summary>Morning temperature</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.TemperatureOLD.Evening">
            <summary>Evening temperature</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.TemperatureOLD.Night">
            <summary>Night temperature</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.TemperatureOLD.Min">
            <summary>
                Min temperature of the day. If not set, returns the min between night and daily temp
            </summary>
        </member>
        <member name="P:MultiWeatherApi.Model.TemperatureOLD.Max">
            <summary>
                Max temperature of the day. If not set, returns the max between night and daily temp
            </summary>
        </member>
        <member name="P:MultiWeatherApi.Model.TemperatureOLD.ApparentDaily">
            <summary>Apparent daily temperature. If not set, returns the daily temperature.</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.TemperatureOLD.ApparentMin">
            <summary>Apparent min temperature. If not set, returns the min temperature.</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.TemperatureOLD.ApparentMax">
            <summary>Apparent max temperature. If not set, returns the max temperature.</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.TemperatureOLD.ApparentNight">
            <summary>Apparent night temperature. If not set, returns the night temperature.</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.TemperatureOLD.ApparentEvening">
            <summary>Apparent evening temperature. If not set, returns the evening temperature.</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.TemperatureOLD.ApparentMorning">
            <summary>Apparent morning temperature. If not set, returns the morning temperature.</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.TemperatureOLD.DewPoint">
            <summary>Dew point</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.TemperatureOLD.Humidity">
            <summary>Humidity (percentage)</summary>
        </member>
        <member name="T:MultiWeatherApi.Model.Severity">
            <summary>
                Represents the severity of a weather alert.
            </summary>
        </member>
        <member name="F:MultiWeatherApi.Model.Severity.Advisory">
            <summary>This alert indicates that individuals should be aware of potentially severe weather.</summary>
        </member>
        <member name="F:MultiWeatherApi.Model.Severity.Watch">
            <summary>This alert indicates that individuals should prepare for potentially severe weather.</summary>
        </member>
        <member name="F:MultiWeatherApi.Model.Severity.Warning">
            <summary>This alert indicates that individuals should take immediate action to protect themselves and others from potentially severe weather.</summary>
        </member>
        <member name="F:MultiWeatherApi.Model.Severity.Unknown">
            <summary>The severity of this alert is not recognized/defined</summary>
        </member>
        <member name="T:MultiWeatherApi.Model.Unit">
            <summary>
                Units of measurement supported by the Forecast service.
            </summary>
        </member>
        <member name="F:MultiWeatherApi.Model.Unit.Imperial">
            <summary>
                Imperial US units of measurement.
            <para>
                Summaries containing temperature or snow accumulation units have
                their values in degrees Fahrenheit or inches (respectively).
                Nearest storm distance: Miles
                Precipitation intensity: Inches/hour
                Precipitation accumulation: Inches
                Temperature: Fahrenheit
                Dew Point: Fahrenheit
                Wind Speed: Miles/hour
                Pressure: Millibars
                Visibility: Miles
            </para>
            </summary>
        </member>
        <member name="F:MultiWeatherApi.Model.Unit.SI">
            <summary>
                SI units of measurement.
            <para>
                Summaries containing temperature or snow accumulation units have
                their values in degrees Celsius or centimeters (respectively).
                Nearest storm distance: km
                Precipitation intensity: mm/hour
                Precipitation accumulation: cm
                Temperature: Celsius
                Dew Point: Celsius
                Wind Speed: m/s
                Pressure: Hectopascals (equivalent to millibars)
                Visibility: km
            </para>
            </summary>
        </member>
        <member name="F:MultiWeatherApi.Model.Unit.Auto">
            <summary>
                Automatically choose units of measurement based on geographic location.
            </summary>
        </member>
        <member name="T:MultiWeatherApi.Model.Exclude">
            <summary>
                Data blocks that can be excluded from a request.
            </summary>
        </member>
        <member name="F:MultiWeatherApi.Model.Exclude.Currently">
            <summary>
                The current data block, containing current weather conditions.
            </summary>
        </member>
        <member name="F:MultiWeatherApi.Model.Exclude.Minutely">
            <summary>
                The minutely data block, containing minute-by-minute data for the next hour.
            </summary>
        </member>
        <member name="F:MultiWeatherApi.Model.Exclude.Hourly">
            <summary>
                The hourly data block, containing hour-by-hour data for the next two days (or the next week, if extended).
            </summary>
        </member>
        <member name="F:MultiWeatherApi.Model.Exclude.Daily">
            <summary>
                The daily data block, containing day-by-day data for the next week.
            </summary>
        </member>
        <member name="F:MultiWeatherApi.Model.Exclude.Alerts">
            <summary>
                A list of any severe weather alerts issued for the requested location.
            </summary>
        </member>
        <member name="F:MultiWeatherApi.Model.Exclude.Flags">
            <summary>
                Associated metadata related to the request.
            </summary>
        </member>
        <member name="T:MultiWeatherApi.Model.Language">
            <summary>
                Languages that the service can return text summaries in.
                These are listed here in the order that they appear in the Forecast.io API documentation.
            </summary>
        </member>
        <member name="T:MultiWeatherApi.Model.TypesExtensions">
            <summary>
                Extension methods for the request parameter enumerations.
            </summary>
        </member>
        <member name="M:MultiWeatherApi.Model.TypesExtensions.SeverityFromString(System.String,System.String)">
            <summary>String to severity</summary>
        </member>
        <member name="M:MultiWeatherApi.Model.TypesExtensions.ToValue(MultiWeatherApi.Model.Severity)">
            <summary>Severity to string</summary>
        </member>
        <member name="M:MultiWeatherApi.Model.TypesExtensions.ToValue(MultiWeatherApi.Model.Exclude)">
            <summary>
                Gives the Forecast Service-friendly name for this parameter.
            </summary>
            <param name="self">The parameter to convert.</param>
            <returns>The service-friendly <see cref="T:System.String"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the parameter does not have a corresponding friendly name.</exception>
        </member>
        <member name="M:MultiWeatherApi.Model.TypesExtensions.ToValue(MultiWeatherApi.Model.Language)">
            <summary>
                Gives the Forecast Service-friendly name for this parameter.
            </summary>
            <param name="self">The parameter to convert.</param>
            <returns>The service-friendly <see cref="T:System.String"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the parameter does not have a corresponding friendly name.</exception>
        </member>
        <member name="T:MultiWeatherApi.Model.Weather">
            <summary>
                Current weather conditions for a particular location.
            </summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Weather.Coordinates">
            <summary>the geo coordinates of this forecast</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Weather.TimeZone">
            <summary>the IANA time zone name for this location.</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Weather.TimeZoneOffset">
            <summary>the time zone offset, in hours from GMT.</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Weather.Summary">
            <summary>A human-readable summary of the weather conditions of this data point</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Weather.Description">
            <summary>A human-readable full description of the weather conditions</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Weather.Icon">
            <summary>Icon code</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Weather.IconUrl">
            <summary>Icon URL, if available</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Weather.Visibility">
            <summary>the average visibility. Can be null on daily data point</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Weather.Wind">
            <summary>the wind features</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Weather.Alerts">
            <summary>Any weather alerts related to this location.</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Weather.Temperature">
            <summary>Various real temperatures of this time frame</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Weather.ApparentTemperature">
            <summary>Various apparent temperatures of this time frame</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Weather.UnixTime">
            <summary>Time of this data point (unix, UTC). See also <see cref="P:MultiWeatherApi.Model.Weather.Time"/></summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Weather.SunriseUnixTime">
            <summary>Sunrise time (unix local time). See also <see cref="P:MultiWeatherApi.Model.Weather.SunriseTime"/></summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Weather.SunsetUnixTime">
            <summary>Sunset time (unix local time). See also <see cref="P:MultiWeatherApi.Model.Weather.SunsetTime"/></summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Weather.Time">
            <summary>Time of this data point (UTC). See also <see cref="P:MultiWeatherApi.Model.Weather.UnixTime"/></summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Weather.SunriseTime">
            <summary>Sunrise local time. See also <see cref="P:MultiWeatherApi.Model.Weather.SunsetUnixTime"/></summary>
            <remarks>Null for hourly details</remarks>
        </member>
        <member name="P:MultiWeatherApi.Model.Weather.SunsetTime">
            <summary>Sunset local time. See also <see cref="P:MultiWeatherApi.Model.Weather.SunsetUnixTime"/></summary>
            <remarks>Null for hourly details</remarks>
        </member>
        <member name="T:MultiWeatherApi.Model.WeatherGroup">
            <summary>
                Current and forecast weather conditions for a particular location.
            </summary>
        </member>
        <member name="P:MultiWeatherApi.Model.WeatherGroup.Coordinates">
            <summary>the geo coordinates of this forecast</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.WeatherGroup.TimeZone">
            <summary>the IANA time zone name for this location</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.WeatherGroup.TimeZoneOffset">
            <summary>the time zone offset, in hours from GMT.</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.WeatherGroup.Alerts">
            <summary>Any weather alerts related to this location.</summary>
        </member>
        <member name="M:MultiWeatherApi.Model.WeatherGroup.#ctor">
            <summary>
                Empty group
            </summary>
        </member>
        <member name="M:MultiWeatherApi.Model.WeatherGroup.#ctor(System.Int32)">
            <summary>
                Empty group with a specific initial capacity
            </summary>
        </member>
        <member name="M:MultiWeatherApi.Model.WeatherGroup.#ctor(System.Collections.Generic.IEnumerable{MultiWeatherApi.Model.Weather})">
            <summary>
                Initializes a new instance that contains elements copied from the specified collection and has 
                sufficient capacity to accommodate the number of elements copied.
            </summary>
        </member>
        <member name="T:MultiWeatherApi.Model.Wind">
            <summary>
                Windows speed and direction
            </summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Wind.Speed">
            <summary>the wind speed.</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Wind.Bearing">
            <summary>the direction (in degrees) the wind is coming from.</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Wind.GustSpeed">
            <summary>the wind gust speed</summary>
        </member>
        <member name="P:MultiWeatherApi.Model.Wind.GustUnixTime">
            <summary>Time of wind gust (unix, UTC)</summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeatherWrapper.ApiKey">
            <summary>Set the api key for the underneath weather service</summary>
        </member>
        <member name="M:MultiWeatherApi.OpenWeatherWrapper.#ctor">
            <summary>
                Default constructor. Require to soon set the <see cref="P:MultiWeatherApi.OpenWeatherWrapper.ApiKey"/>.
            </summary>
        </member>
        <member name="M:MultiWeatherApi.OpenWeatherWrapper.#ctor(System.String)">
            <summary>
                Constructor allowing to set the <see cref="P:MultiWeatherApi.OpenWeatherWrapper.ApiKey"/> for the underneath weather service
            </summary>
            <param name="apiKey">the API key for the underneath weather service</param>
        </member>
        <member name="M:MultiWeatherApi.OpenWeatherWrapper.GetWeatherByDate(System.Double,System.Double,System.DateTime,MultiWeatherApi.Model.Unit,MultiWeatherApi.Model.Language)">
            <summary>
            
            </summary>
        </member>
        <member name="T:MultiWeatherApi.OpenWeather.Helpers.MyAlertConverter">
            <summary>
                Converter that handle both a single float/float value, as well as a Alert object
            </summary>
        </member>
        <member name="M:MultiWeatherApi.OpenWeather.Helpers.MyAlertConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
                Deserialize an OpenWeather Alert into a Multiweather Alert object
            </summary>
        </member>
        <member name="T:MultiWeatherApi.OpenWeather.Helpers.MySnowRainConverter">
            <summary>
                Manage snow/rain in the format of a float number of an object in the form {"1h": "float value"}
            </summary>
        </member>
        <member name="T:MultiWeatherApi.OpenWeather.Helpers.MyTemperatureConverter">
            <summary>
                Converter that handle both a single float/float value, as well as a Temperature object
            </summary>
        </member>
        <member name="M:MultiWeatherApi.OpenWeather.Helpers.MyTemperatureConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
                Deserialize a float, float or object {min,max, day,night,morn,eve} into a temperature
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:MultiWeatherApi.OpenWeather.IOpenWeatherService.GetCurrentWeather(System.Double,System.Double,MultiWeatherApi.OpenWeather.Model.OWUnit,MultiWeatherApi.Model.Language)">
            <summary>
                current weather data for one location by geographic coordinates
            </summary>
            <param name="latitude"></param>
            <param name="longitude"></param>
            <param name="unit">Default <see cref="F:MultiWeatherApi.OpenWeather.Model.OWUnit.Standard"/></param>
            <param name="language">Default <see cref="F:MultiWeatherApi.Model.Language.English"/></param>
            <returns></returns>
        </member>
        <member name="M:MultiWeatherApi.OpenWeather.IOpenWeatherService.GetCurrentWeather(System.String,MultiWeatherApi.OpenWeather.Model.OWUnit,MultiWeatherApi.Model.Language)">
            <summary>
                current weather data for one location by city name
            </summary>
            <param name="city"></param>
            <param name="unit">Default <see cref="F:MultiWeatherApi.OpenWeather.Model.OWUnit.Standard"/></param>
            <param name="language">Default <see cref="F:MultiWeatherApi.Model.Language.English"/></param>
            <returns></returns>
        </member>
        <member name="M:MultiWeatherApi.OpenWeather.IOpenWeatherService.GetForecast(System.Double,System.Double,MultiWeatherApi.OpenWeather.Model.OWUnit,MultiWeatherApi.Model.Language)">
            <summary>
                weather forecast for 5 days with data every 3 hours
            </summary>
            <param name="latitude"></param>
            <param name="longitude"></param>
            <param name="unit">Default <see cref="F:MultiWeatherApi.OpenWeather.Model.OWUnit.Standard"/></param>
            <param name="language">Default <see cref="F:MultiWeatherApi.Model.Language.English"/></param>
        </member>
        <member name="M:MultiWeatherApi.OpenWeather.IOpenWeatherService.GetForecast(System.String,MultiWeatherApi.OpenWeather.Model.OWUnit,MultiWeatherApi.Model.Language)">
            <summary>
                weather forecast for 5 days with data every 3 hours by city name
            </summary>
            <param name="city"></param>
            <param name="unit">Default <see cref="F:MultiWeatherApi.OpenWeather.Model.OWUnit.Standard"/></param>
            <param name="language">Default <see cref="F:MultiWeatherApi.Model.Language.English"/></param>
            <returns></returns>
        </member>
        <member name="M:MultiWeatherApi.OpenWeather.IOpenWeatherService.GetForecastDSL(System.Double,System.Double,MultiWeatherApi.OpenWeather.Model.OWUnit,MultiWeatherApi.Model.Language)">
            <summary>
                'darksky-like' weather forecast: current weather plus daily forecast for 7 days 
            </summary>
            <param name="latitude"></param>
            <param name="longitude"></param>
            <param name="unit">Default <see cref="F:MultiWeatherApi.OpenWeather.Model.OWUnit.Standard"/></param>
            <param name="language">Default <see cref="F:MultiWeatherApi.Model.Language.English"/></param>
        </member>
        <member name="T:MultiWeatherApi.OpenWeather.Model.AlertZ">
            <summary>
                An severe weather alert issued by a weather service for a particular location.
            </summary>
        </member>
        <member name="T:MultiWeatherApi.OpenWeather.Model.DataPointDSL">
            <summary>
                The weather conditions at a particular location and time frame.
            </summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.DataPointDSL.Summary">
            <summary>A human-readable summary of the weather conditions of this data point</summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.DataPointDSL.Description">
            <summary>A human-readable full description of the weather conditions</summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.DataPointDSL.Icon">
            <summary>Icon code</summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.DataPointDSL.IconUrl">
            <summary>Icon URL, if available</summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.DataPointDSL.Visibility">
            <summary>the average visibility (default meters)</summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.DataPointDSL.Wind">
            <summary>the wind features</summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.DataPointDSL.Temperature">
            <summary>Various real temperatures of this time frame</summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.DataPointDSL.ApparentTemperature">
            <summary>Various apparent temperatures of this time frame</summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.DataPointDSL.UnixTime">
            <summary>Time of this data point (unix, UTC). See also <see cref="P:MultiWeatherApi.OpenWeather.Model.DataPointDSL.Time"/></summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.DataPointDSL.SunriseUnixTime">
            <summary>Sunrise time (unix, UTC). See also <see cref="P:MultiWeatherApi.OpenWeather.Model.DataPointDSL.SunriseTime"/></summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.DataPointDSL.SunsetUnixTime">
            <summary>Sunset time (unix, UTC). See also <see cref="P:MultiWeatherApi.OpenWeather.Model.DataPointDSL.SunsetTime"/></summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.DataPointDSL.Time">
            <summary>Time of this data point (UTC). See also <see cref="P:MultiWeatherApi.OpenWeather.Model.DataPointDSL.UnixTime"/></summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.DataPointDSL.SunriseTime">
            <summary>Sunrise time (UTC). See also <see cref="P:MultiWeatherApi.OpenWeather.Model.DataPointDSL.SunsetUnixTime"/></summary>
            <remarks>Null for hourly details</remarks>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.DataPointDSL.SunsetTime">
            <summary>Sunset time (UTC). See also <see cref="P:MultiWeatherApi.OpenWeather.Model.DataPointDSL.SunsetUnixTime"/></summary>
            <remarks>Null for hourly details</remarks>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.DataPointDSL.UVIndex">
            <summary>UV index</summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.DataPointDSL.Cloudness">
            <summary>the percentage of cloud cover (from 0 to 100).</summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.DataPointDSL.Snow">
            <summary>Snow volume (where available). Default in mm.</summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.DataPointDSL.Rain">
            <summary>Rain volume (where available). Default in mm.</summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.DataPointDSL.ProbOfPrecipitation">
            <summary>Probability of precipitation (0..1)</summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.DataPointDSL.WindSpeed">
            <summary>the wind speed</summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.DataPointDSL.WindBearing">
            <summary>
                the direction (in degrees) the wind is coming from.
            </summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.DataPointDSL.Pressure">
            <summary>The pressure</summary>
        </member>
        <member name="T:MultiWeatherApi.OpenWeather.Model.ForecastDSL">
            <summary>
                A 'darksky-like' set of weather contitions / forecast for a particular location
            </summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.ForecastDSL.Coordinates">
            <summary>the geo coordinates of this forecast</summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.ForecastDSL.TimeZone">
            <summary>the IANA time zone name for this location</summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.ForecastDSL.TimeZoneOffset">
            <summary>the time zone offset, in hours from GMT.</summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.ForecastDSL.Currently">
            <summary>the current conditions at the requested location.</summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.ForecastDSL.Minutely">
            <summary>the minute-by-minute conditions for the next hour.</summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.ForecastDSL.Hourly">
            <summary>the hour-by-hour conditions for the next two days.</summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.ForecastDSL.Daily">
            <summary>the daily conditions for the next week.</summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.ForecastDSL.Alerts">
            <summary>any weather alerts related to this location.</summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.ForecastDSL.Latitude">
            <summary>the latitude of this forecast.</summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.ForecastDSL.Longitude">
            <summary>the longitude of this forecast.</summary>
        </member>
        <member name="T:MultiWeatherApi.OpenWeather.Model.MinutelyDataPoint">
            <summary>
                Minute by minute weather info (rain)
            </summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.MinutelyDataPoint.UnixTime">
            <summary>Gets or sets the time of this data point (unix, UTC)</summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.MinutelyDataPoint.Time">
            <summary>Gets or sets the time of this data point (unix, UTC)</summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.MinutelyDataPoint.Rain">
            <summary>Precipitation quantity</summary>
        </member>
        <member name="T:MultiWeatherApi.OpenWeather.Model.MultiWeatherConditions">
            <summary>
                A set of weather conditions for a time frame (<see cref="P:MultiWeatherApi.OpenWeather.Model.MultiWeatherConditions.Items"/>)
            </summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.MultiWeatherConditions.Coordinates">
            <summary>City geo location</summary>
        </member>
        <member name="T:MultiWeatherApi.OpenWeather.Model.TemperatureMain">
            <summary>
                This is the class of openweather that has temperatures and apparent temperatures
            </summary>
        </member>
        <member name="T:MultiWeatherApi.OpenWeather.Model.WeatherConditions">
            <summary>
                Weather conditions / forecast for a specific day (<see cref="P:MultiWeatherApi.OpenWeather.Model.WeatherConditions.Time"/>)
            </summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.WeatherConditions.UnixTime">
            <summary>the time of this data point (unix, UTC)</summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.WeatherConditions.Time">
            <summary>the time of this data point (unix, UTC)</summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.WeatherConditions.City">
            <summary>City info</summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.WeatherConditions.Coordinates">
            <summary>City geo location</summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.WeatherConditions.Temperature">
            <summary>
                Various temperatures of this time frame
            </summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.WeatherConditions.ApparentTemperature">
            <summary>
                Various apparent temperatures of this time frame
            </summary>
        </member>
        <member name="P:MultiWeatherApi.OpenWeather.Model.WeatherConditions.Sys">
            <summary>City Additional info</summary>
        </member>
        <member name="T:MultiWeatherApi.OpenWeather.OpenWeatherService">
            <summary>
                The OpenWeatherMap service. Returns weather data for given locations, and provides API usage information.
            </summary>
        </member>
        <member name="M:MultiWeatherApi.OpenWeather.OpenWeatherService.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:MultiWeatherApi.OpenWeather.OpenWeatherService"/> class.
            </summary>
            <param name="key">The API key to use.</param>
        </member>
        <member name="M:MultiWeatherApi.OpenWeather.OpenWeatherService.GetForecastDSL(System.Double,System.Double,MultiWeatherApi.OpenWeather.Model.OWUnit,MultiWeatherApi.Model.Language)">
            <summary>
            
            </summary>
            <param name="latitude"></param>
            <param name="longitude"></param>
            <param name="unit"></param>
            <param name="language"></param>
            <returns></returns>
        </member>
        <member name="T:MultiWeatherApi.WeatherException">
            <summary>
                A general exception return vy the API call if any error occurr. 
                The <see cref="P:MultiWeatherApi.WeatherException.Code"/> attributes help in distinguish the error type
            </summary>
        </member>
        <member name="F:MultiWeatherApi.WeatherException.EmptyApiKey">
            <summary>The api is empty</summary>
        </member>
        <member name="F:MultiWeatherApi.WeatherException.JsonUnsuccessful">
            <summary>Json content is not valid</summary>
        </member>
        <member name="F:MultiWeatherApi.WeatherException.JsonParsingError">
            <summary>Error parsing or missing fields</summary>
        </member>
        <member name="F:MultiWeatherApi.WeatherException.HttpError">
            <summary>Generic http error</summary>
        </member>
        <member name="F:MultiWeatherApi.WeatherException.HttpUnauthorized">
            <summary>Unauthorized http error</summary>
        </member>
        <member name="T:MultiWeatherApi.WeatherFactory">
            <summary>
                Concreate factory class to create the required weather service wrapper
            </summary>
        </member>
        <member name="F:MultiWeatherApi.WeatherFactory.DarkSkyServiceId">
            <summary>Use this key to use the DarkSky service</summary>
        </member>
        <member name="F:MultiWeatherApi.WeatherFactory.OpenWeatherServiceId">
            <summary>Use this key to use the OpenWeatherMap service</summary>
        </member>
        <member name="M:MultiWeatherApi.WeatherFactory.Create(System.Guid,System.String)">
            <summary>
                Factory method to create the service.
            </summary>
            <remarks>Inherit this method to add new services</remarks>
            <param name="serviceId"></param>
            <param name="apiKey"></param>
            <returns></returns>
        </member>
        <member name="T:MultiWeatherApi.WeatherServiceBase">
            <summary>
                General commond methods for an Weather API fetcher
            </summary>
        </member>
        <member name="M:MultiWeatherApi.WeatherServiceBase.#ctor(System.String)">
            <summary>
                Initializes a new instance of the weather service.
            </summary>
            <param name="key">The API key to use.</param>
        </member>
        <member name="M:MultiWeatherApi.WeatherServiceBase.GetCompressionHandler">
            <summary>
                Creates a HttpClientHandler that supports compression for responses.
            </summary>
            <returns>The <see cref="T:System.Net.Http.HttpClientHandler"/> with compression support.</returns>
        </member>
        <member name="M:MultiWeatherApi.WeatherServiceBase.ParseJsonFromStream``1(System.IO.Stream,Newtonsoft.Json.JsonConverter[])">
            <summary>
                Given a successful response from the forecast service, read the stream and parses it as weather data
            </summary>
            <param name="jsonStream">A successful stream containing weather data in json format</param>
            <param name="customConverters">An optional array of custom converts</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> for an object containing the weather data from the response.</returns>
            <remarks>throw a <see cref="T:MultiWeatherApi.WeatherException" /> with <see cref="F:MultiWeatherApi.WeatherException.JsonParsingError"/></remarks>
            <exception cref="T:MultiWeatherApi.WeatherException">thrown new WeatherException(WeatherException.JsonParsingError, jex.Message, jex)</exception>
        </member>
        <member name="M:MultiWeatherApi.WeatherServiceBase.ThrowExceptionIfApiKeyInvalid">
            <summary>
                Checks if the user provided a non-null API key during initialization, and throws an exception if not.
            </summary>
            <exception cref="T:MultiWeatherApi.WeatherException">Thrown if the API key is null or the empty string.</exception>
        </member>
        <member name="M:MultiWeatherApi.WeatherServiceBase.ThrowExceptionIfResponseError(System.Net.Http.HttpResponseMessage)">
            <summary>
                Throws an <see cref="T:MultiWeatherApi.WeatherException"/> if the given response didn't have a status code indicating success, 
                with the status code included in the exception message.
            </summary>
            <param name="response">The response</param>
            <exception cref="T:MultiWeatherApi.WeatherException">Thrown if the response did not have a status code indicating success.</exception>
        </member>
    </members>
</doc>
